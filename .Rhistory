View(subset(tel.fixr30,NewFixRate>35))
# Set working directory
setwd('C:/Users/adroghini/Documents/wolves_snowfall/')
# Load required packages
library(dplyr)
# Load telemetry data
# This file was previously cleaned and modified by colleague Eric Neilson
telem <- read.csv("data/all_wolves_telem.csv",header=T,stringsAsFactors = FALSE)
head(telem)
# Clean up extra columns
names(telem)
# DateTimeSt column is local time
# Delete all other date/time strings
# Check if day_local, month_loca, etc. columns are the same as Day, Month, Hour, Minute, Second..
print(which(telem$Day %in% telem$day_local == FALSE))
print(which(telem$Month %in% telem$month_loca == FALSE))
print(which(telem$Hour %in% telem$hour_local == FALSE))
print(which(telem$Minute %in% telem$minute_loc == FALSE))
print(which(telem$Second %in% telem$second_loc == FALSE))
# Check if Device_ID and Device columns are the same
print(which(unique(telem$Device_ID) %in% unique(telem$Device) == FALSE))
# Device_ID is wrong. It looks like two IDs (32261 and 32263) have an extra '1' added at the end of them in the
# Device_ID column. Device is the correct one.
cols.to.delete <- c("FID","number","Device_ID","Date_Time_","Date_Time1","date_Local","day_local","month_loca",
"time_local","hour_local","minute_loc","second_loc","Altitude","Fix_Status","DOP",
"Temp_C","Main_V","Back_V","Beavon_V","Collartype","UTC_Date","UTC_Time","LMT_Date","LMT_Time",
"Origin","SCTS_Date","SCTS_Time","ECEFX_m","ECEFY_m","ECEFZ_m","Mort_Statu","Activity",
"F63","DateTime","LINENO","DTdiff","FixRate","ThreeHR","StudyArea","Season","WSCount","In99Sel",
"Use")
# Create Date only column
telem$Date <- paste (telem$Year, telem$Month, telem$Day, sep = "-")
#Specify new column order
cols.order <- c("Device","Latitude","Longitude","POINT_X","POINT_Y","DateTimeSt","year_local",
"Month","Day","Hour","Minute","Second","Pack")
# Drop unnecessary columns, reorder and rename
telem  <- telem %>%
select(cols.order,-cols.to.delete) %>%
rename(DateTime = DateTimeSt, Year = year_local,Easting = POINT_X, Northing = POINT_Y)
rm(cols.order,cols.to.delete)
# Specify proper column type
telem$Device <- as.factor(telem$Device)
telem$Pack <- as.factor(telem$Pack)
telem$Year <- as.integer(telem$Year)
# Date/Time column
Sys.setenv(TZ="Etc/GMT-7") # because POSIXt is a nightmare
telem$DateTime <- as.POSIXct(strptime(telem$DateTime, format="%m/%d/%Y %H:%M:%S",tz="Etc/GMT-7"))
telem$Date <- as.Date(telem$Date, format="%Y-%m-%d",tz="Etc/GMT-7")
# Arrange by Collar ID and by DateTime for easy calculation of movement metrics
telem <- arrange(telem, Device, DateTime)
fast.ids <- read.csv('data/fast_collars_schedule.csv',stringsAsFactors = FALSE)
ids.to.keep <- unique(fast.ids$Collar_ID)
# N = 18 collars with fast fix rates
# 9 in 2014
# 9 in 2013
# 3 ran for both years
# Subset to only include date/time that corresponds with our remote camera (snowfall) data
# Jan. - Mar. 2013 and 2014
# Fast fixes only start on January 10
telem <- telem %>%
filter(Device %in% ids.to.keep & Year > 2012 & ( (Month == 1 & Day >= 10) | (Month > 1 & Month < 4)))
rm(ids.to.keep, fast.ids)
# Some collars failed or had only a few observations
# Identify and remove these collars
# Create unique row number for each device, according to date/time
telem <- telem %>%
group_by(Device) %>%
arrange(DateTime) %>%
mutate(UID = row_number()) %>%
select(UID,everything())
telem <- arrange(telem,Device,UID)
# Calculate actual fix rate
telem$FixRate <- NA
telem$FixRate <- telem$FixRate
for (i in 2:nrow(telem)) {
if (telem$Device[i] == telem$Device[i - 1]) {
telem$FixRate[i] <-
difftime(telem$DateTime[i], telem$DateTime[i - 1], units = "mins")
}
}
# Load packages
library(dplyr)
# Load required packages
library(dplyr)
# Load telemetry data
# This file was previously cleaned and modified by colleague Eric Neilson
telem <- read.csv("data/all_wolves_telem.csv",header=T,stringsAsFactors = FALSE)
cols.to.delete <- c("FID","number","Device_ID","Date_Time_","Date_Time1","date_Local","day_local","month_loca",
"time_local","hour_local","minute_loc","second_loc","Altitude","Fix_Status","DOP",
"Temp_C","Main_V","Back_V","Beavon_V","Collartype","UTC_Date","UTC_Time","LMT_Date","LMT_Time",
"Origin","SCTS_Date","SCTS_Time","ECEFX_m","ECEFY_m","ECEFZ_m","Mort_Statu","Activity",
"F63","DateTime","LINENO","DTdiff","FixRate","ThreeHR","StudyArea","Season","WSCount","In99Sel",
"Use")
#Specify new column order
cols.order <- c("Device","Latitude","Longitude","POINT_X","POINT_Y","DateTimeSt","year_local",
"Month","Day","Hour","Minute","Second","Pack")
# Drop unnecessary columns, reorder and rename
telem  <- telem %>%
select(cols.order,-cols.to.delete) %>%
rename(DateTime = DateTimeSt, Year = year_local,Easting = POINT_X, Northing = POINT_Y)
# Clean up extra columns
names(telem)
# Drop unnecessary columns, reorder and rename
telem  <- telem %>%
select(cols.order,-cols.to.delete) %>%
rename(DateTime = DateTimeSt, Year = year_local,Easting = POINT_X, Northing = POINT_Y)
# Drop unnecessary columns, reorder and rename
telem  <- telem %>%
select(cols.order,-cols.to.delete) %>%
rename(DateTime = DateTimeSt)
View(telem)
telem  <- telem %>%
select(cols.order,-cols.to.delete)
View(telem)
telem <- rename(telem,DateTime = DateTimeSt, Year = year_local,Easting = POINT_X, Northing = POINT_Y)
telem <- dplyr::rename(telem,DateTime = DateTimeSt, Year = year_local,Easting = POINT_X, Northing = POINT_Y)
rm(cols.order,cols.to.delete)
# Specify proper column type
telem$Device <- as.factor(telem$Device)
telem$Pack <- as.factor(telem$Pack)
telem$Year <- as.integer(telem$Year)
rm(i)
# Create Date only column
telem$Date <- paste (telem$Year, telem$Month, telem$Day, sep = "-")
# Date/Time column
Sys.setenv(TZ="Etc/GMT-7") # because POSIXt is a nightmare
telem$DateTime <- as.POSIXct(strptime(telem$DateTime, format="%m/%d/%Y %H:%M:%S",tz="Etc/GMT-7"))
telem$Date <- as.Date(telem$Date, format="%Y-%m-%d",tz="Etc/GMT-7")
# Arrange by Collar ID and by DateTime for easy calculation of movement metrics
telem <- arrange(telem, Device, DateTime)
# Subset to only include collars that have fix rates of 30 mins. or less
## Fast fix rates are required for fine-scale movement metrics
# The following Device IDs were programmed to have fast fix rates
fast.ids <- read.csv('data/fast_collars_schedule.csv',stringsAsFactors = FALSE)
ids.to.keep <- unique(fast.ids$Collar_ID)
telem <- telem %>%
filter(Device %in% ids.to.keep & Year > 2012 & ( (Month == 1 & Day >= 10) | (Month > 1 & Month < 4)))
rm(ids.to.keep, fast.ids)
# Create unique row number for each device, according to date/time
telem <- telem %>%
group_by(Device) %>%
arrange(DateTime) %>%
mutate(UID = row_number()) %>%
select(UID,everything())
telem <- arrange(telem,Device,UID)
# Create unique row number for each device, according to date/time
telem <- telem %>%
group_by(Device) %>%
arrange(DateTime) %>%
mutate(UID = row_number()) %>%
select(UID,everything())
View(telem)
telem <- telem %>%
dplyr::group_by(Device) %>%
arrange(DateTime) %>%
mutate(UID = row_number()) %>%
select(UID,everything())
telem <- telem %>%
dplyr::group_by(Device) %>%
dplyr::arrange(DateTime) %>%
mutate(UID = row_number()) %>%
select(UID,everything())
telem <- telem %>%
dplyr::group_by(Device) %>%
dplyr::arrange(DateTime) %>%
dplyr::mutate(UID = row_number()) %>%
dplyr::select(UID,everything())
View(telem)
telem <- arrange(telem,Device,UID)
# Calculate actual fix rate
telem$FixRate <- NA
telem$FixRate <- telem$FixRate
for (i in 2:nrow(telem)) {
if (telem$Device[i] == telem$Device[i - 1]) {
telem$FixRate[i] <-
difftime(telem$DateTime[i], telem$DateTime[i - 1], units = "mins")
}
}
rm(i)
View(subset(telem,FixRate>35))
nrow(subset(telem,FixRate>59))
telem <- telem %>%
filter(Device != 13793)
nrow(subset(telem,FixRate>59))
telem <- telem %>%
mutate(FixRate.NA = ifelse(FixRate > 59,
NA,FixRate))
# Load required packages
library(dplyr)
library(data.table)
# Identify which columns ran on 10 min fix rates
fast.fixes <- telem %>%
group_by(Device) %>%
filter(FixRate<=35) %>% # This is the subset that will be applied when calculating movement metrics
summarise(
obs = length(Device),
start.date = min(DateTime),
end.date = max(DateTime),
mean.fix = mean(FixRate,na.rm=TRUE), # first row is NA (no previous fix)
sd.fix = sd(FixRate,na.rm=TRUE),
max.fix = max(FixRate,na.rm=TRUE),
min.fix = min(FixRate,na.rm=TRUE)
) %>%
arrange(mean.fix)
ten.min.id <- unique(fast.fixes %>%
filter(mean.fix < 29))$Device
ten.min.id<-droplevels(ten.min.id)
rm(fast.fixes)
ten.min <- telem %>%
filter(Device %in% ten.min.id)
rm(ten.min.id)
# Figure out start date of each collar
date.range <-ten.min %>%
group_by(Device) %>%
summarise(
start.datetime = min(DateTime),
end.datetime = max(DateTime),
start.date = min(Date),
end.date = max(Date),
no_of_days = ceiling(difftime(end.datetime, start.datetime,units="days"))
)
date.range$Device <- droplevels(date.range$Device)
for (i in 1:nrow(date.range)) {
device = as.character(date.range$Device[i])
if (device == "32261") {
start.date <-
paste(date.range$start.date[i], "09:00:00", sep = " ")
}
else {
start.date <-
paste(date.range$start.date[i], "00:00:00", sep = " ")
}
seq.dates <-
seq(as.POSIXct(start.date), by = "30 mins",length.out = as.numeric(date.range$no_of_days[i]) * 48)
target <- CJ(device, seq.dates)
if (device == "32261") {
target <- target %>%
filter(V2 < "2013-04-01 00:00:00" | V2 >= "2014-01-10 00:00:00")
}
else {
}
if (i == 1) {
target_dates <- target
}
else {
target_dates <- rbind(target_dates, target)
}
}
# Clean up workspace
rm(device,i,seq.dates,start.date,target)
# Rename columns
target_dates <- target_dates %>%
rename(target.id = V1, target.time = V2)
target_dates$target.id = as.factor(target_dates$target.id)
# Check to see if this worked
target_dates %>%
group_by(target.id) %>%
summarize(obs = length(target.time),
start.date = min(target.time),
end.date = max(target.time))
# Join idealized target_dates with ten.min telemetry subset
ten.min <- data.table(ten.min)
target_dates <- data.table(target_dates)
ten.min[, date_time:=DateTime]
target_dates[, target_time:=target.time]
setkey(ten.min, Device, date_time)
setkey(target_dates, target.id, target_time)
subset.data <- ten.min[target_dates, roll="nearest"]
# row number roughly 1/3 of ten minute data subset
# there are some NAs created here because >30 min fix rates and imprecision of seq.dates
# use Device and UID to create a unique variable that allows for removal of duplicate entries
subset.data <- subset.data %>%
mutate(unique_var = paste(UID,Device,sep="_")) %>%
distinct(unique_var,.keep_all=TRUE)
# Remove extra columns created during these operations
names(subset.data)
subset.data <- subset.data %>%
select(-c(date_time,target.time,unique_var))
ten.min <- select(ten.min, -date_time)
# create subset from telem file that includes everything except ten.min
# merge this subset with subset.data
telem.wo.ten <- dplyr::setdiff(telem,ten.min)
subset.data <- as.data.frame(subset.data)
tel.fixr30 <- union(telem.wo.ten,subset.data)
tel.fixr30$Device<-as.factor(tel.fixr30$Device)
# nrow(telem.wo.ten) + nrow(subset.data) == nrow(tel.fixr30)
tel.fixr30 <- tel.fixr30 %>%
group_by(Device) %>%
arrange(UID)
# Clean up workspace
rm(date.range, subset.data,target_dates,telem,telem.wo.ten,ten.min)
View(tel.fixr30)
tel.fixr30 <- tel.fixr30 %>%
group_by(Device) %>%
arrange(Device,UID)
View(tel.fixr30)
View(subset(backup,Device==13794)
)
View(tel.fixr30)
View(subset(backup,Device==13790))
View(subset(tel.fixr30,Device==13790))
# Load telemetry data
# This file was previously cleaned and modified by colleague Eric Neilson
telem <- read.csv("data/all_wolves_telem.csv",header=T,stringsAsFactors = FALSE)
cols.to.delete <- c("FID","number","Device_ID","Date_Time_","Date_Time1","date_Local","day_local","month_loca",
"time_local","hour_local","minute_loc","second_loc","Altitude","Fix_Status","DOP",
"Temp_C","Main_V","Back_V","Beavon_V","Collartype","UTC_Date","UTC_Time","LMT_Date","LMT_Time",
"Origin","SCTS_Date","SCTS_Time","ECEFX_m","ECEFY_m","ECEFZ_m","Mort_Statu","Activity",
"F63","DateTime","LINENO","DTdiff","FixRate","ThreeHR","StudyArea","Season","WSCount","In99Sel",
"Use")
#Specify new column order
cols.order <- c("Device","Latitude","Longitude","POINT_X","POINT_Y","DateTimeSt","year_local",
"Month","Day","Hour","Minute","Second","Pack")
# Drop unnecessary columns, reorder and rename
telem  <- telem %>%
select(cols.order,-cols.to.delete) %>%
rename(DateTime = DateTimeSt, Year = year_local,Easting = POINT_X, Northing = POINT_Y)
rm(cols.order,cols.to.delete)
# Specify proper column type
telem$Device <- as.factor(telem$Device)
telem$Pack <- as.factor(telem$Pack)
telem$Year <- as.integer(telem$Year)
# Create Date only column
telem$Date <- paste (telem$Year, telem$Month, telem$Day, sep = "-")
# Date/Time column
Sys.setenv(TZ="Etc/GMT-7") # because POSIXt is a nightmare
telem$DateTime <- as.POSIXct(strptime(telem$DateTime, format="%m/%d/%Y %H:%M:%S",tz="Etc/GMT-7"))
telem$Date <- as.Date(telem$Date, format="%Y-%m-%d",tz="Etc/GMT-7")
# Arrange by Collar ID and by DateTime for easy calculation of movement metrics
telem <- arrange(telem, Device, DateTime)
fast.ids <- read.csv('data/fast_collars_schedule.csv',stringsAsFactors = FALSE)
ids.to.keep <- unique(fast.ids$Collar_ID)
# N = 18 collars with fast fix rates
# 9 in 2014
# 9 in 2013
# 3 ran for both years
# Subset to only include date/time that corresponds with our remote camera (snowfall) data
# Jan. - Mar. 2013 and 2014
# Fast fixes only start on January 10
telem <- telem %>%
filter(Device %in% ids.to.keep & Year > 2012 & ( (Month == 1 & Day >= 10) | (Month > 1 & Month < 4)))
rm(ids.to.keep, fast.ids)
# Some collars failed or had only a few observations
# Identify and remove these collars
# Create unique row number for each device, according to date/time
telem <- telem %>%
group_by(Device) %>%
arrange(DateTime) %>%
mutate(UID = row_number()) %>%
select(UID,everything())
telem <- arrange(telem,Device,UID)
# Calculate actual fix rate
telem$FixRate <- NA
telem$FixRate <- telem$FixRate
for (i in 2:nrow(telem)) {
if (telem$Device[i] == telem$Device[i - 1]) {
telem$FixRate[i] <-
difftime(telem$DateTime[i], telem$DateTime[i - 1], units = "mins")
}
}
rm(i)
collar.summary <- telem %>%
group_by(Device) %>%
summarise(
obs = length(Device),
start.date = min(DateTime),
end.date = max(DateTime),
mean.fix = mean(FixRate,na.rm=TRUE), # first row is NA (no previous fix)
sd.fix = sd(FixRate,na.rm=TRUE),
max.fix = max(FixRate,na.rm=TRUE),
min.fix = min(FixRate,na.rm=TRUE)
)
write.csv(collar.summary,'data/collar_summary.csv',row.names=FALSE)
rm(collar.summary)
# I used results from the collar.summary table to inspect collars for failure
# and missed fixes. In general, our collars performed very well, and most of the issues I found (by subsetting, for each Device, the rows which had
# a FixRate>35) had to do with the collars ending their fast fix schedule a few days before the end of March.
# There was only one device that I decided to exclude completely because of poor performance.
# Device 13793 had a mean fix rate of 33.0 (range: 0.66 to 3749) and a standard deviation of 192.
# It also only ran for two weeks (N = 954) at the beginning of January 2014 before dying.
# Remove Device 13793
telem <- telem %>%
filter(Device != 13793)
### ------------------------- ###
# Summary of other issues I discovered
# Devices: 32261, 33674, 33672 have data for two years
# Causes huge jump in FixRate as you go from March 31 2013 to Jan 10 2014
# Set FixRate of first row of 2014 to NA
# Device 33668 has one observation (UID = 1976) with a FixRate of 570.
# Device 33675 UID 2011 has a FixRate of 510.
# Device 33673 UID 1976 has a FixRate of 569.
# Device 33671 UID 1975 & UID 1995 FixRates > 500
# Device 33669 has a few (N=6) rows with FixRates > 35
# Device 33674 has N = 6 rows for which FixRates > 35
# Device 32261 final row (UID = 14713) has FixRate of 730 - end of collar data, consistent 10 min. data up until (including) March 30
# Devices: 32254, 33678, 32263, 13794. Fast fix rate ends on 2014-03-29; fix rate falls to 720+ minutes after 03-29
### ------------------------- ###
# Based on these patterns I will ignore all data for which FixRate > 59 (N = 53)
# nrow(subset(telem,FixRate>59))
# Note there are only 3 observations between 30 and 59 (40, 40, and 49 min. fix rates)
# To do this I will manually set FixRate == NA if current fix rate is > 59
# So that speed is not calculated between this & previous point
# During implementation of movement metric script
telem <- telem %>%
mutate(FixRate.NA = ifelse(FixRate > 59,
NA,FixRate))
library(dplyr)
library(data.table)
# Identify which columns ran on 10 min fix rates
fast.fixes <- telem %>%
group_by(Device) %>%
filter(FixRate<=35) %>% # This is the subset that will be applied when calculating movement metrics
summarise(
obs = length(Device),
start.date = min(DateTime),
end.date = max(DateTime),
mean.fix = mean(FixRate,na.rm=TRUE), # first row is NA (no previous fix)
sd.fix = sd(FixRate,na.rm=TRUE),
max.fix = max(FixRate,na.rm=TRUE),
min.fix = min(FixRate,na.rm=TRUE)
) %>%
arrange(mean.fix)
ten.min.id <- unique(fast.fixes %>%
filter(mean.fix < 29))$Device
ten.min.id<-droplevels(ten.min.id)
rm(fast.fixes)
ten.min <- telem %>%
filter(Device %in% ten.min.id)
rm(ten.min.id)
# Figure out start date of each collar
date.range <-ten.min %>%
group_by(Device) %>%
summarise(
start.datetime = min(DateTime),
end.datetime = max(DateTime),
start.date = min(Date),
end.date = max(Date),
no_of_days = ceiling(difftime(end.datetime, start.datetime,units="days"))
)
for (i in 1:nrow(date.range)) {
device = as.character(date.range$Device[i])
if (device == "32261") {
start.date <-
paste(date.range$start.date[i], "09:00:00", sep = " ")
}
else {
start.date <-
paste(date.range$start.date[i], "00:00:00", sep = " ")
}
seq.dates <-
seq(as.POSIXct(start.date), by = "30 mins",length.out = as.numeric(date.range$no_of_days[i]) * 48)
target <- CJ(device, seq.dates)
if (device == "32261") {
target <- target %>%
filter(V2 < "2013-04-01 00:00:00" | V2 >= "2014-01-10 00:00:00")
}
else {
}
if (i == 1) {
target_dates <- target
}
else {
target_dates <- rbind(target_dates, target)
}
}
# Clean up workspace
rm(device,i,seq.dates,start.date,target)
# Rename columns
target_dates <- target_dates %>%
rename(target.id = V1, target.time = V2)
target_dates$target.id = as.factor(target_dates$target.id)
# Check to see if this worked
target_dates %>%
group_by(target.id) %>%
summarize(obs = length(target.time),
start.date = min(target.time),
end.date = max(target.time))
# Join idealized target_dates with ten.min telemetry subset
ten.min <- data.table(ten.min)
target_dates <- data.table(target_dates)
ten.min[, date_time:=DateTime]
target_dates[, target_time:=target.time]
setkey(ten.min, Device, date_time)
setkey(target_dates, target.id, target_time)
subset.data <- ten.min[target_dates, roll="nearest"]
View(subset(subset.data,Device==13790))
# row number roughly 1/3 of ten minute data subset
# there are some NAs created here because >30 min fix rates and imprecision of seq.dates
# use Device and UID to create a unique variable that allows for removal of duplicate entries
subset.data <- subset.data %>%
mutate(unique_var = paste(UID,Device,sep="_")) %>%
distinct(unique_var,.keep_all=TRUE)
View(subset(subset.data,Device==13790))
# Remove extra columns created during these operations
names(subset.data)
subset.data <- subset.data %>%
select(-c(date_time,target.time,unique_var))
ten.min <- select(ten.min, -date_time)
# create subset from telem file that includes everything except ten.min
# merge this subset with subset.data
telem.wo.ten <- dplyr::setdiff(telem,ten.min)
# check
nrow(telem) - nrow(ten.min) == nrow(telem.wo.ten)
tel.fixr30 <- union(telem.wo.ten,subset.data)
tel.fixr30$Device<-as.factor(tel.fixr30$Device)
# nrow(telem.wo.ten) + nrow(subset.data) == nrow(tel.fixr30)
tel.fixr30 <- tel.fixr30 %>%
group_by(Device) %>%
arrange(Device,UID)
# Clean up workspace
rm(date.range, subset.data,target_dates,telem,telem.wo.ten,ten.min)
# Load required libraries
library(plyr)

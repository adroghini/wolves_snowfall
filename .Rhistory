plot(W,which=2,add=TRUE) #xaxp  = c(0, 6, 50),xlim=c(0.48,0.5))
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
log10(0.5)
exp(0.5)
10exp(0.5)
10^log(0.5,10)
log(3.14,10)
antilog<-function(lx,base)
{
lbx<-lx/log(exp(1),base=base)
result<-exp(lbx)
result
}
antilog(0.5,10)
rm(antilog)
# Inverse log
# Antilog function from: http://r.789695.n4.nabble.com/Searching-for-antilog-function-td4721348.html
antilog<-function(lx,base)
{
lbx<-lx/log(exp(1),base=base)
result<-exp(lbx)
result
}
antilog(0.5,10)
breakpoint<-antilog(0.5,10)
rm(antilog)
tel.fixr30$Behavior[tel.fixr30$speed<breakpoint]<-"rest" #####FIX
tel.fixr30$Behavior[tel.fixr30$speed<breakpoint]<-"resting"
tel.fixr30$Behavior[tel.fixr30$speed>=breakpoint<-"travelling"
# Categorize behaviour based on speed
tel.fixr30$Behavior<-"NA"
tel.fixr30$Behavior[tel.fixr30$speed<breakpoint]<-"resting"
tel.fixr30$Behavior[tel.fixr30$speed>=breakpoint]<-"travelling"
nrow(subset(tel.fixr30,speed>1.65&speed<3.14))
View(tel.fixr30)
hist(tel.fixr30$Behavior)
# Categorize behaviour based on speed
tel.fixr30$Behavior<-NA
tel.fixr30$Behavior[tel.fixr30$speed<breakpoint]<-0
tel.fixr30$Behavior[tel.fixr30$speed>=breakpoint]<-1
hist(tel.fixr30$Behavior)
View(tel.fixr30)
rm(segs)
breakpoint_model <- normalmixEM(segments$log.speed, k=2, epsilon = 1e-03, fast=TRUE)
# Calculate resting/traveling breakpoint
# Thanks to Melanie Dickie for the idea
segments<-data.frame(log(0.01+tel.fixr30$speed)) ##add constant or else 0 = -INF
colnames(segments)[1]<-"log.speed"
# Remove NAs for function to work
segments <- segments %>%
filter(!is.na(log.speed))
breakpoint_model <- normalmixEM(segments$log.speed, k=2, epsilon = 1e-03, fast=TRUE)
plot.new()
plot.window(xlim=c(-6,6), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
range(segments$log.speed)
plot.new()
plot.window(xlim=c(-5,6), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
locator()
png("figures/S2_speed_breakpoint.png",res=800,units="cm",height=15,width=20)
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
dev.off()
png("figures/S2_speed_breakpoint.png",res=800,units="cm",height=13,width=22)
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
dev.off()
png("figures/S2_speed_breakpoint.png",res=800,units="cm",height=17,width=19)
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
dev.off()
png("figures/S2_speed_breakpoint.png",res=800,units="cm",height=17,width=20)
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
dev.off()
png("figures/S2_speed_breakpoint.png",res=800,units="cm",height=16,width=20)
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
dev.off()
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1,at = seq(10, 200, by = 10), ); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1,at = seq(-5, 5, by = 1), ); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
png("figures/S2_speed_breakpoint.png",res=800,units="cm",height=16,width=20)
plot.new()
plot.window(xlim=c(-5,5.5), ylim=c(0,0.3))
plot(breakpoint_model,which=2,add=TRUE)
box(); axis(1,at = seq(-5, 5, by = 1), ); axis(2); title(xlab="Log of speed (m/min)", ylab="Density")
abline(v=0.5,lty=2,lwd=2,col="black")
dev.off()
rm(W)
rm(antilog, breakpoint,segments,breakpoint_model)
mean(tel.fixr30$Latitude)
mean(tel.fixr30$Longitude)
install.packages(suncalc)
install.packages("suncalc")
# Load required packages
library(suncalc)
getSunlightTimes(date = Sys.Date(), lat = 50.1, lon = 1.83, tz = "CET")
getSunlightTimes(date = seq.Date(Sys.Date()-9, Sys.Date(), by = 1),
keep = c("sunrise", "sunset"),
lat = 50.1, lon = 1.83, tz = "CET")
# Calcule sunrise/sunset times
sunset <- getSunlightTimes(date = tel.fixr30$DateTime,
keep = c("sunrise", "sunset"),
lat = date = tel.fixr30$Latitude, lon = tel.fixr30$Longitude, tz = "Etc/GMT-7")
# Calcule sunrise/sunset times
sunset <- getSunlightTimes(date = tel.fixr30$DateTime,
keep = c("sunrise", "sunset"),
lat = tel.fixr30$Latitude, lon = tel.fixr30$Longitude, tz = "Etc/GMT-7")
sunset <- getSunlightTimes(date = tel.fixr30$DateTime,
keep = c("sunrise", "sunset"),
lat = c(tel.fixr30$Latitude), lon = c(tel.fixr30$Longitude), tz = "Etc/GMT-7")
# Calcule sunrise/sunset times
sunset <- getSunlightTimes(data = tel.fixr30, date = DateTime,
keep = c("sunrise", "sunset"),
lat = Latitude, lon = Longitude, tz = "Etc/GMT-7")
# Calcule sunrise/sunset times
sunset <- getSunlightTimes(data = tel.fixr30, date = tel.fixr30$DateTime,
keep = c("sunrise", "sunset"),
lat = Latitude, lon = Longitude, tz = "Etc/GMT-7")
# Calcule sunrise/sunset times
sunset <- getSunlightTimes(data = tel.fixr30, date = tel.fixr30$DateTime,
keep = c("sunrise", "sunset"),
lat = tel.fixr30$Latitude, lon = tel.fixr30$Longitude, tz = "Etc/GMT-7")
library(dplyr)
# Calcule sunrise/sunset times
sunset.df <- tel.fixr30 %>%
select(DateTime,Latitude,Longitude)
View(sunset.df)
# Calcule sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(DateTime,Latitude,Longitude)
sunset <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
# Calcule sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(DateTime,Latitude,Longitude) %>%
reanme(date = DateTime, lat = Latitude, lon = Longitude)
# Calcule sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(DateTime,Latitude,Longitude) %>%
rename(date = DateTime, lat = Latitude, lon = Longitude)
sunset <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
# Calcule sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,Latitude,Longitude) %>%
rename(date = Date, lat = Latitude, lon = Longitude)
View(sunset.df)
sunset <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,Latitude,Longitude) %>%
rename(date = Date, lat = Latitude, lon = Longitude) %>%
distinct()
View(sunset.df)
?round
round(sunset.df$Latitude[1],digits=1)
sunset.df$Latitude[1]
sunset.df$Latitude[,1]
head(sunset.df$Latitude)
sunset.df$lat[1]
round(sunset.df$lat[1],digits=1)
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,Latitude,Longitude) %>%
transmute(lat = round(Latitude,digits=1),lon = round(Longitude,digits=1) )
rename(date = Date) %>%
distinct()
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,Latitude,Longitude) %>%
transmute(lat = round(Latitude,digits=1),lon = round(Longitude,digits=1)) %>%
rename(date = Date) %>%
distinct()
?transmute
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,Latitude,Longitude) %>%
rename(date = Date) %>%
transmute(date, lat = round(Latitude,digits=1),lon = round(Longitude,digits=1)) %>%
distinct()
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,Latitude,Longitude) %>%
transmute(Date, lat = round(Latitude,digits=1),lon = round(Longitude,digits=1)) %>%
rename(date = Date) %>%
distinct()
sunset <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
View(sunset)
tel.fixr30 <- tel.fixr30 %>%
mutate(lat = round(Latitude,digits=1),lon = round(Longitude,digits=1))
View(tel.fixr30)
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
rm(sunset)
test <- tel.fixr30 %>%
rename(date = Date) %>%
left_join(tel.fixr30,sunset.df,by=c(date,lat,lon))
View(tel.fixr30)
rename(sunset.df,Date=date)
sunset.df <- rename(sunset.df,Date=date)
sunset.df <- rename(sunset.df,Date=date)
?rename
sunset.df <- dplyr::rename(sunset.df,Date=date)
sunset.df <- dplyr::rename(sunset.df,Date = date)
sunset.df <- dplyr::rename(sunset.df,Date = sunset.df$date)
sunset.df$Date <- sunset.df$date)
sunset.df$Date <- sunset.df$date
View(sunset.df)
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df$Date <- NA
sunset.df$Date <- sunset.df$date
sunset.df$Date <- as.Date(NA)
sunset.df$Date <- sunset.df$date
sunset.df <- select(sunset.df, -date)
sunset.df$Date <- as.Date(sunset.df$Date, format="%Y-%m-%d",tz="Etc/GMT-7")
# Left join to append sunrise/sunset times to tel.fixr30
test <- tel.fixr30 %>%
left_join(tel.fixr30,sunset.df,by=c(Date,lat,lon))
?left_join
# Obtain sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunrise", "sunset"),
tz = "Etc/GMT-7")
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
# Left join to append sunrise/sunset times to tel.fixr30
test <- tel.fixr30 %>%
left_join(tel.fixr30,sunset.df,by=c("Date"="date","lat"="lat","lon"="lon"))
sunset.df <- sunset.df %>%
rename(Date = date)
# Left join to append sunrise/sunset times to tel.fixr30
test <- tel.fixr30 %>%
left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
# Left join to append sunrise/sunset times to tel.fixr30
test <-
left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
View(test)
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
View(sunset.df)
# Obtain sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
View(sunset.df)
View(sunset.df)
getSunlightTimes(date = Sys.Date(), lat = 50.1, lon = 1.83, tz = "CET")
getSunlightTimes(date = Sys.Date(), lat = 50.1, lon = 1.83, tz = "CET",keep="sunrise")
sunset.df$lon<- sunset.df$lon*-1
View(sunset.df)
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
View(sunset.df)
# Left join to append sunrise/sunset times to tel.fixr30
test <- left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
sunset.df <- sunset.df %>%
rename(Date = date)
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- sunset.df %>%
rename(Date = date)
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- sunset.df %>%
rename(Date = date)
sunset.df <- dplyr::rename(sunset.df,Date = date)
rm(sunset.df)
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df$lon<- sunset.df$lon*-1 # ?
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- dplyr::rename(sunset.df,Date = date)
# Left join to append sunrise/sunset times to tel.fixr30
test <- left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
View(test)
# Calcule sunrise/sunset times
# Round to nearest .1 decimal point or else getSunlightTimes takes a while to run
# Create rounded lat / lon column
tel.fixr30 <- tel.fixr30 %>%
mutate(lat = round(Latitude,digits=1),lon = (round(Longitude,digits=1)*-1))
View(tel.fixr30)
# Obtain sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- dplyr::rename(sunset.df,Date = date)
# Left join to append sunrise/sunset times to tel.fixr30
test <- left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
View(test)
# Check if results make sense
sunset.df %>%
group_by(Year, Month) %>%
summarize(mean.sunrise = mean(sunrise))
# Check if results make sense
sunset.df %>%
summarize(mean.sunrise = mean(sunrise))
# Check if results make sense
test %>%
group_by(Year, Month)
# Check if results make sense
test %>%
ungroup(Device) %>%
group_by(Year, Month) %>%
summarize(mean.sunrise = mean(sunrise))
# Check if results make sense
range(test$sunrise)
range(test$sunset)
View(subset(test,Date=="2013-03-10"))
View(subset(test,Date>"2013-03-08"&Date<"2013-03-11"))
test$time_of_day <- "NA"
test <- test %>%
mutate(time_of_day,ifelse(DateTime >= sunrise & DateTime < sunset, "day", "night"))
# Left join to append sunrise/sunset times to tel.fixr30
test <- left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
test$time_of_day <- "NA"
test <- test %>%
mutate(time_of_day=ifelse(DateTime >= sunrise & DateTime < sunset, "day", "night"))
test$DateTime[75]
test$sunrise[75]
DateTime[75] >= sunrise[75]
test$DateTime[75] >= test$sunrise[75]
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
rename(date = Date) %>%
distinct()
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
# Obtain sunrise/sunset times
sunset.df <- tel.fixr30 %>%
ungroup(Device) %>%
select(Date,lat,lon) %>%
mutate(date = Date - 1) %>%
distinct()
sunset.df$date <- as.Date(sunset.df$date, format="%Y-%m-%d",tz="Etc/GMT-7")
sunset.df <- getSunlightTimes(data = sunset.df,
keep = c("sunset","sunrise"),
tz = "Etc/GMT-7")
# Left join to append sunrise/sunset times to tel.fixr30
test <- left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
View(test)
sunset.df <- select(sunset.df, -date)
# Left join to append sunrise/sunset times to tel.fixr30
test <- left_join(tel.fixr30,sunset.df,by=c("Date"="Date","lat"="lat","lon"="lon"))
test$time_of_day <- "NA"
test <- test %>%
mutate(time_of_day=ifelse(DateTime >= sunrise & DateTime < sunset, "day", "night"))
table(test$time_of_day)
table(test$time_of_day,test$Hour)
table(test$Hour,test$time_of_day)
# Check if results make sense
range(test$sunrise)
range(test$sunset)
table(test$Hour,test$time_of_day)
View(subset(test,Year==2013 & Month == 3 & Day >= 9 & Day < 12))
tel.fixr30 <- test %>%
select(-c(lat,lon))
rm(sunset.df, test)
tel.fixr30 %>%
group_by(Device,Date,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = travelling - N,
prop.move = travelling / N, prop.rest = 1 - prop.move)
tel.fixr30 %>%
group_by(Device,Date,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = travelling - N,
prop.move = travelling / N, prop.rest = 1 - prop.move)
tel.fixr30 %>%
filter(!is.na(NewFixRate)) %>%
group_by(Device,Date,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = travelling - N,
prop.move = travelling / N, prop.rest = 1 - prop.move)
tel.fixr30 %>%
filter(!is.na(NewFixRate)) %>%
group_by(Device,Date,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = N - travelling,
prop.move = travelling / N, prop.rest = 1 - prop.move)
tel.fixr30 %>%
filter(!is.na(NewFixRate)) %>%
group_by(Device,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = N - travelling,
prop.move = travelling / N, prop.rest = 1 - prop.move)
tel.fixr30 %>%
filter(!is.na(NewFixRate)) %>%
group_by(Device,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = N - travelling,
prop.move = travelling / N, prop.rest = 1 - prop.move, mean.speed = mean(speed))
diurnal.summary <- tel.fixr30 %>%
filter(!is.na(NewFixRate)) %>%
group_by(Device,time_of_day) %>%
summarize(N = length(Behavior), travelling = sum(Behavior), resting = N - travelling,
prop.move = travelling / N, prop.rest = 1 - prop.move, mean.speed = mean(speed))
View(diurnal.summary)
plot(diurnal.summary,prop.move ~ time_of_day)
plot(diurnal.summary,prop.move, time_of_day)
?plot
plot(diurnal.summary$time_of_day,diurnal.summary$prop.move)
plot(as.factor(diurnal.summary$time_of_day),diurnal.summary$prop.move)
plot(as.factor(diurnal.summary$time_of_day),diurnal.summary$speed)
plot(as.factor(diurnal.summary$time_of_day),diurnal.summary$mean.speed)
rm(diurnal.summary)
